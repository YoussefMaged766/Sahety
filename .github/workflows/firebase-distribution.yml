name: Firebase App Distribution (Debug)

on:
  push:
    branches:
      - staging

jobs:
  build-and-distribute:
    name: Build Debug APK & Distribute
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v4

      # Set up JDK with Gradle cache
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      # Additional Gradle cache (includes wrapper + caches)
      - name: Cache Gradle Files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      # Make Gradle wrapper executable
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Decode google-services.json from secret
      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      # Build Debug APK with optimization flags
      - name: Build Debug APK
        run: ./gradlew assembleDebug --build-cache --configuration-cache -x lint -x test

      # Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Distribute APK to Firebase App Distribution
      - name: Distribute Debug APK to Firebase
        run: |
          firebase appdistribution:distribute app/build/outputs/apk/debug/app-debug.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups "Sahety" \
            --token ${{ secrets.FIREBASE_TOKEN }}
